ДЗ.
Задание 1:
- написать код, который:
  будет спрашивать логин (prompt),
  если посетитель вводит "Админ", то спрашивать пароль, если нажал отмена (escape) – выводить "Вход отменён",
  если вводит что-то другое – "Я вас не знаю".
  Пароль проверять так. Если введён пароль "Чёрный Властелин", то выводить "Добро пожаловать!",
  иначе – "Пароль неверен", при отмене – "Вход отменён".
  Для решения использовать вложенные блоки if.

Задание 2:
- переписать if..else с использованием нескольких тернарных операторов:

  var message;

  if (login === 'Вася') {
    message = 'Привет';
  } else if (login === 'Директор') {
    message = 'Здравствуйте';
  } else if (login === '') {
    message = 'Нет логина';
  } else {
    message = '';
  }

Задание 3:
- при помощи цикла for вывести чётные числа от 2 до 10.

Задание 4 *:
- написать код, который:
  запрашивает по очереди значения при помощи prompt и сохраняет их в массиве,
  заканчивает ввод, как только посетитель введёт пустую строку, не число или нажмёт "Отмена"
  (при этом ноль 0 не должен заканчивать ввод, это разрешённое число),
  выводит сумму всех значений массива.

Задание 5 *:
- расписать циклы filter и map в нативном виде

ГИТ:
- почитать о Git (Основы и Ветвление в Git) - https://git-scm.com/book/ru/v1/Основы-Git
- залить домашнее задание на Github, инструкция:
  - зарегистрировать аккаунт на https://github.com
  - создать свой первый репозиторий
  - установить Git
  - перейти в свою локальную папку с проектом
  - команды для работы с cmd или с GitBash:
    - cd .. - подняться на директорию вверх
    - cd "My Folder" - перейти во внутреннюю директорию с названием My Folder
    - cd + нажатие на tab - поиск внутренней директории
    - cd + начало ввода имени директории + tab - автоматическая подсказка имени директории
  - инструкция для первого пуша (см. скрин) - локальная папка git должна храниться на самом верхнем уровне!
  - инструкция для последующих пушей (см. скрин)
  - что делать в случае, если удалили локальный git, как выглядит мерж-конфликт (см. скрины)

- разобраться с командами со скринов; почитать как работает git pull, --rebase, git fetch,
чем отличаются друг от друга; узнать, зачем нужен gitignore

- оформление:
  - для всех домашних заданий создать один репозиторий с названием Homework_JS_Basic-level
  - для каждого ДЗ - создается новая папка с названиями Lesson-1 и т.д.
  - в каждой папке должны храниться файлы index.html и main.js
  - коммит-сообщение должно быть вида "Homework 1" и т.д.

!!! Обращать внимание на стиль и читабельность кода !!!